name: Build App
on:
  workflow_dispatch:
    inputs:
      os:
        type: choice
        description: OS to build on. Ubuntu is faster, MacOS supports iOS builds, Windows is unsupported
        options:
          - ubuntu-latest
          - macos-12
      platform:
        type: choice
        description: Platform to build for
        options:
          - android
          - ios
      profile:
        type: choice
        description: Build profile to use
        options:
          - development
          - simulator
          - preview
          - production
      repo:
        description: 'Repository name'
        required: true
      branch:
        description: 'Branch name'
        default: master
        
      artifact:
        type: choice
        description: Artifact
        options:
          - none
          - upload
          - submit
          - diawi
          - installonair
      key:
        description: Key
        required: true

env:
  GH_MODULE_TOKEN: ${{ secrets.GH_MODULE_TOKEN }}


jobs:
  build:
    runs-on: ${{ github.event.inputs.os }}
    strategy:
      matrix:
        node: [ 18.x ]
    steps:
      - name: Assign variable
        id: secret
        run: echo '::set-output name=secret::${{secrets.KEY}}'
        
      - name: 🏗 Setup repo
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: 🏗 Clone code
        if: ${{ github.event.inputs.key == steps.secret.outputs.secret }}
        run: rm -rf ./* && git clone --branch ${{ github.event.inputs.branch }} --single-branch https://${{ secrets.GH_TOKEN }}@github.com/${{ secrets.USER }}/${{ github.event.inputs.repo }}.git

      - name: 🏗 Move code
        if: ${{ github.event.inputs.key == steps.secret.outputs.secret }}
        run: mv ./${{ github.event.inputs.repo }}/* ./

      - name: 🏗 Setup Node
        if: ${{ github.event.inputs.key == steps.secret.outputs.secret }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - name: 🏗 Setup Expo and EAS
        if: ${{ github.event.inputs.key == steps.secret.outputs.secret }}
        uses: expo/expo-github-action@v7
        with:
          token: ${{ secrets.EXPO_TOKEN }}
          expo-version: latest
          eas-version: latest

      - name: 🏗 Setup EAS local builds
        if: ${{ github.event.inputs.key == steps.secret.outputs.secret }}
        run: yarn global add eas-cli-local-build-plugin

      - name: 📦 Install dependencies
        if: ${{ github.event.inputs.key == steps.secret.outputs.secret }}
        run: rm -rf yarn.lock && rm -rf package-lock.json && yarn install && npx expo install --fix

      - name: Change cocoapods version
        if: ${{ contains('macos-12',github.event.inputs.os) }}
        run: ruby -v && pod --version && gem uninstall cocoapods --all --force && gem install cocoapods -v 1.14.3 && pod --version

      - name: 👷 Build app
        if: ${{ github.event.inputs.key == steps.secret.outputs.secret }}
        run: |
          eas build --local \
            --non-interactive \
            --platform=${{ github.event.inputs.platform }} \
            --profile=${{ github.event.inputs.profile }}

      - name: Find path
        id: find_path
        run: echo "::set-output name=artifact_path::$(echo $(find . -type f -name 'build-*.*' -maxdepth 1))"

      - name: Show path
        run: echo ${{ steps.find_path.outputs.artifact_path }}

      - name: Submit app
        if: ${{ contains('submit',github.event.inputs.artifact) && github.event.inputs.key == steps.secret.outputs.secret }}
        run:  eas submit -p ${{ github.event.inputs.platform }} --path ${{ steps.find_path.outputs.artifact_path }}

      - name: 📱 Upload binary
        if: ${{ github.event.inputs.key == steps.secret.outputs.secret }}
        uses: actions/upload-artifact@v2
        with:
          name: app-${{ github.event.inputs.platform }}
          path: ${{ steps.find_path.outputs.artifact_path }}

      - name: 📱 Upload diawi
        if: ${{ contains('diawi',github.event.inputs.artifact) && github.event.inputs.key == steps.secret.outputs.secret }}
        uses: rnkdsh/action-upload-diawi@v1.2.7
        with:
          token: ${{ secrets.DIAWI_TOKEN }}
          file: ${{ steps.find_path.outputs.artifact_path }}
          recipients: ${{ secrets.DIAWI_EMAIL }}

      - name: 📱 Upload File
        id: installonair
        if: ${{ contains('installonair',github.event.inputs.artifact) && github.event.inputs.key == steps.secret.outputs.secret }}
        uses: hoangdaicntt/telegram-installonair-actions@master
        with:
          title: '${{ github.event.inputs.repo }}[${{ github.event.inputs.branch }}] ${{ github.event.inputs.platform }} ${{ github.event.inputs.profile }}'
          user_id: '74613'
          telegramUid: ${{ secrets.TELEGRAM_TO }}
          telegramToken: ${{ secrets.TELEGRAM_TOKEN }}
          fileForms: '{"ipafile":"${{ steps.find_path.outputs.artifact_path }}"}'

      - name: 📱 Message Build
        if: ${{ contains('submit',github.event.inputs.artifact) && github.event.inputs.key == steps.secret.outputs.secret }}
        uses: hoangdaicntt/telegram-installonair-actions@master
        with:
          title: '${{ github.event.inputs.repo }}[${{ github.event.inputs.branch }}] ${{ github.event.inputs.platform }} ${{ github.event.inputs.profile }}'
          message: 'Build end: ${{ steps.find_path.outputs.artifact_path }}'
          telegramUid: ${{ secrets.TELEGRAM_TO }}
          telegramToken: ${{ secrets.TELEGRAM_TOKEN }}

